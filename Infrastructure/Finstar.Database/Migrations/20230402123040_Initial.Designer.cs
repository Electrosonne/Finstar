// <auto-generated />
using System;
using Finstar.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Finstar.Database.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20230402123040_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Finstar.Domain.Commentary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TodoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TodoId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Text = "First",
                            TodoId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Text = "Second",
                            TodoId = 1L
                        });
                });

            modelBuilder.Entity("Finstar.Domain.Todo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Title", "Category")
                        .IsUnique();

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Category = 2,
                            Color = 0,
                            CreatedDate = new DateTime(2023, 4, 2, 15, 30, 39, 836, DateTimeKind.Local).AddTicks(9452),
                            IsClosed = false,
                            Title = "Create a ticket"
                        },
                        new
                        {
                            Id = 2L,
                            Category = 0,
                            Color = 1,
                            CreatedDate = new DateTime(2023, 4, 2, 15, 30, 39, 836, DateTimeKind.Local).AddTicks(9468),
                            IsClosed = false,
                            Title = "Request information "
                        });
                });

            modelBuilder.Entity("Finstar.Domain.Commentary", b =>
                {
                    b.HasOne("Finstar.Domain.Todo", null)
                        .WithMany("Comments")
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Finstar.Domain.Todo", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
